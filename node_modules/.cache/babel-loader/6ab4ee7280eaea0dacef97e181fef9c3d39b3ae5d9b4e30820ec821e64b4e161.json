{"ast":null,"code":"var _jsxFileName = \"/Users/aysenurdag/university-events-management/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport events from '../mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const selectedEvent = events.find(event => event.id === parseInt(id));\n  const [editMode, setEditMode] = useState(false);\n  const history = useHistory();\n  const handleDelete = () => {\n    // Implement deletion logic\n    const updatedEvents = events.filter(event => event.id !== parseInt(id));\n    console.log('Deleted Event:', selectedEvent);\n    console.log('Updated Events:', updatedEvents);\n\n    // You may want to update your state or send a request to a server to update data\n    // For now, let's navigate back to the event list\n    history.push('/');\n  };\n  const handleUpdate = () => {\n    // Implement update logic\n    // For demonstration purposes, let's assume you have a form with updatedEvent state\n    // Update the selectedEvent with the form data or make a request to update on the server\n    console.log('Updated Event:', selectedEvent);\n    setEditMode(false);\n\n    // You may want to update your state or send a request to a server to update data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organizer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.organizer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditMode(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Event not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetail, \"KNqJxCeNw3p6ptvzvg+ffRTUz+8=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EventDetail;\nexport default EventDetail;\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useState","useParams","useHistory","events","jsxDEV","_jsxDEV","EventDetail","_s","id","selectedEvent","find","event","parseInt","editMode","setEditMode","history","handleDelete","updatedEvents","filter","console","log","push","handleUpdate","children","fileName","_jsxFileName","lineNumber","columnNumber","name","date","location","description","organizer","onClick","_c","$RefreshReg$"],"sources":["/Users/aysenurdag/university-events-management/src/pages/EventDetailPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport events from '../mockData';\n\nconst EventDetail = () => {\n  const { id } = useParams();\n  const selectedEvent = events.find((event) => event.id === parseInt(id));\n  const [editMode, setEditMode] = useState(false);\n  const history = useHistory();\n\n  const handleDelete = () => {\n    // Implement deletion logic\n    const updatedEvents = events.filter((event) => event.id !== parseInt(id));\n    console.log('Deleted Event:', selectedEvent);\n    console.log('Updated Events:', updatedEvents);\n\n    // You may want to update your state or send a request to a server to update data\n    // For now, let's navigate back to the event list\n    history.push('/');\n  };\n\n  const handleUpdate = () => {\n    // Implement update logic\n    // For demonstration purposes, let's assume you have a form with updatedEvent state\n    // Update the selectedEvent with the form data or make a request to update on the server\n    console.log('Updated Event:', selectedEvent);\n    setEditMode(false);\n\n    // You may want to update your state or send a request to a server to update data\n  };\n\n  return (\n    <div>\n      <h2>Event Detail</h2>\n      {selectedEvent ? (\n        <div>\n          <p>\n            <strong>Name:</strong> {selectedEvent.name}\n          </p>\n          <p>\n            <strong>Date:</strong> {selectedEvent.date}\n          </p>\n          <p>\n            <strong>Location:</strong> {selectedEvent.location}\n          </p>\n          <p>\n            <strong>Description:</strong> {selectedEvent.description}\n          </p>\n          <p>\n            <strong>Organizer:</strong> {selectedEvent.organizer}\n          </p>\n          {editMode ? (\n            <div>\n              {/* Add form fields for editing */}\n              <button onClick={handleUpdate}>Update</button>\n            </div>\n          ) : (\n            <div>\n              <button onClick={handleDelete}>Delete</button>\n              <button onClick={() => setEditMode(true)}>Edit</button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <p>Event not found</p>\n      )}\n    </div>\n  );\n};\n\nexport default EventDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}