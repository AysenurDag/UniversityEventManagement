{"ast":null,"code":"var _jsxFileName = \"/Users/aysenurdag/university-events-management/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate();\n\n  // Burada seçilen etkinliği bir veri kaynağından almak için bir işlev kullanabilirsiniz.\n  // Örnek olarak, mockData içindeki etkinliklerinizi kullanabilirsiniz.\n\n  // useEffect(() => {\n  //   const fetchEvent = async () => {\n  //     try {\n  //       const response = await fetch(`/api/events/${id}`);\n  //       const eventData = await response.json();\n  //       setSelectedEvent(eventData);\n  //     } catch (error) {\n  //       console.error('Error fetching event:', error);\n  //     }\n  //   };\n  //   fetchEvent();\n  // }, [id]);\n\n  const handleDelete = () => {\n    // Silme işlemini burada uygulayın ve gerekirse veri kaynağınızı güncelleyin.\n    console.log('Delete clicked for event:', selectedEvent);\n    // Örneğin, veri kaynağınızı güncellemek için bir API isteği gönderebilirsiniz.\n    navigate('/'); // Etkinlik listesine geri dön\n  };\n  const handleUpdate = () => {\n    // Güncelleme işlemini burada uygulayın ve gerekirse veri kaynağınızı güncelleyin.\n    console.log('Update clicked for event:', selectedEvent);\n    // Örneğin, veri kaynağınızı güncellemek için bir API isteği gönderebilirsiniz.\n    setEditMode(false); // Düzenleme modundan çık\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectedEvent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Organizer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \" \", selectedEvent.organizer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditMode(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Event not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Event List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EventDetailPage, \"nMBI/KWJbhiW6lyYHhVdAdRjbUM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","useState","useParams","Link","useNavigate","jsxDEV","_jsxDEV","EventDetailPage","_s","id","selectedEvent","setSelectedEvent","editMode","setEditMode","navigate","handleDelete","console","log","handleUpdate","children","fileName","_jsxFileName","lineNumber","columnNumber","name","date","location","description","organizer","onClick","to","_c","$RefreshReg$"],"sources":["/Users/aysenurdag/university-events-management/src/pages/EventDetailPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\n\nconst EventDetailPage = () => {\n  const { id } = useParams();\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const navigate = useNavigate();\n\n  // Burada seçilen etkinliği bir veri kaynağından almak için bir işlev kullanabilirsiniz.\n  // Örnek olarak, mockData içindeki etkinliklerinizi kullanabilirsiniz.\n\n  // useEffect(() => {\n  //   const fetchEvent = async () => {\n  //     try {\n  //       const response = await fetch(`/api/events/${id}`);\n  //       const eventData = await response.json();\n  //       setSelectedEvent(eventData);\n  //     } catch (error) {\n  //       console.error('Error fetching event:', error);\n  //     }\n  //   };\n  //   fetchEvent();\n  // }, [id]);\n\n  const handleDelete = () => {\n    // Silme işlemini burada uygulayın ve gerekirse veri kaynağınızı güncelleyin.\n    console.log('Delete clicked for event:', selectedEvent);\n    // Örneğin, veri kaynağınızı güncellemek için bir API isteği gönderebilirsiniz.\n    navigate('/'); // Etkinlik listesine geri dön\n  };\n\n  const handleUpdate = () => {\n    // Güncelleme işlemini burada uygulayın ve gerekirse veri kaynağınızı güncelleyin.\n    console.log('Update clicked for event:', selectedEvent);\n    // Örneğin, veri kaynağınızı güncellemek için bir API isteği gönderebilirsiniz.\n    setEditMode(false); // Düzenleme modundan çık\n  };\n\n  return (\n    <div>\n      <h2>Event Detail</h2>\n      {selectedEvent ? (\n        <div>\n          <p>\n            <strong>Name:</strong> {selectedEvent.name}\n          </p>\n          <p>\n            <strong>Date:</strong> {selectedEvent.date}\n          </p>\n          <p>\n            <strong>Location:</strong> {selectedEvent.location}\n          </p>\n          <p>\n            <strong>Description:</strong> {selectedEvent.description}\n          </p>\n          <p>\n            <strong>Organizer:</strong> {selectedEvent.organizer}\n          </p>\n          {editMode ? (\n            <div>\n              {/* Düzenleme için form alanlarını ekleyin */}\n              <button onClick={handleUpdate}>Update</button>\n            </div>\n          ) : (\n            <div>\n              <button onClick={handleDelete}>Delete</button>\n              <button onClick={() => setEditMode(true)}>Edit</button>\n            </div>\n          )}\n        </div>\n      ) : (\n        <p>Event not found</p>\n      )}\n      <Link to=\"/\">Back to Event List</Link>\n    </div>\n  );\n};\n\nexport default EventDetailPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}